#!/usr/bin/env ruby

class Nanoc::RuleContext
  def compress?
    @compress.nil? ? @compress = File.exists?('COMPRESS') : @compress
  end
  
  def default_layout
    layout 'default'
    filter :relativize_paths, :type => :html
    filter :html_compressor if compress?
  end
end

compile '/stylesheet/' do
  filter :less
  filter :rainpress if compress?
end

compile /^\/abstracts\/./ do
  layout 'abstract'
  filter :rdiscount
  default_layout
end

compile /^\/abstracts\/./, :rep => 'bibtex' do
end

compile '*' do
  unless item.binary?
    filter :erb if item[:extension] =~ /erb$/
    filter :rdiscount if item[:extension] =~ /md(\.|$)/
    default_layout
  end
end

route '/stylesheet/' do
  '/style.css'
end

route /^\/abstracts\/./ do
  "/abstracts/#{item[:id]}/index.html"
end

route /^\/abstracts\/./, :rep => 'bibtex' do
  item.identifier + item[:key] + '.bib'
end

route '*' do
  if item.binary?
    # Write item with identifier /foo/ to /foo.ext
    item.identifier.chop + '.' + item[:extension]
  else
    # Write item with identifier /foo/ to /foo/index.html
    item.identifier + 'index.html'
  end
end

layout '*', :erb
